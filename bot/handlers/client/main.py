from aiogram import Dispatcher
from aiogram import types
import aiogram.utils.markdown as fmt

from bot import keyboards as kb
from bot.templates import descriptions as dc
from bot.database import models
from bot.misc.environment import secret_keys


def register_client_handlers(dp: Dispatcher):
    @dp.message_handler(commands=['start'])
    async def cmd_start(message: types.Message):    
        await message.answer_sticker('CAACAgQAAxkBAAEJ9r1k01FoAzo2Gysv8QHETLyTswvirwACRAADg2rQEM7UCtdq5wg8MAQ')
        await message.answer(f'üí¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –∏–Ω—Ç—Ä–µ—Ä–Ω–µ—Ç —Å–Ω–∏–∫–µ—Ä—Å—Å—Ç–æ—Ä–µ, {message.from_user.first_name}!', reply_markup=kb.start_keyboard)

    @dp.message_handler(text='üõí–ö–æ—Ä–∑–∏–Ω–∞üõí')
    async def shopping_cart(message: types.Message):
        await message.answer('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ :(. \n–í—Ä–µ–º—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞!', reply_markup=kb.back_to_assortment_inlain_keyboard)

    @dp.message_handler(text='üé≤–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Çüé≤')
    async def assortment(message: types.Message):
        await message.answer_sticker('CAACAgQAAxkBAAEKAAJk19dVR9rwHlml2HOglfF0KHHysQACTAADg2rQENhMNgNvS0EOMAQ', reply_markup=types.ReplyKeyboardRemove())
        await message.answer(dc.ASSORTIMENT_DESCRIPTION, reply_markup=kb.dinamic_assortmen_keyboard())

    @dp.message_handler(text='üîß–ü–æ–¥–¥–µ—Ä–∂–∫–∞üîß')
    async def shopping_cart(message: types.Message):
        await message.answer('–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π - @gleb2999')

    @dp.callback_query_handler()
    async def some_callback_handler(call: types.CallbackQuery):
        if call.data == 'assortment':
            await call.message.answer_sticker('CAACAgQAAxkBAAEKAAJk19dVR9rwHlml2HOglfF0KHHysQACTAADg2rQENhMNgNvS0EOMAQ', reply_markup=types.ReplyKeyboardRemove())
            await call.message.answer(dc.ASSORTIMENT_DESCRIPTION, reply_markup=kb.dinamic_assortmen_keyboard())
            await call.answer()
        
        elif call.data in models.get()['name']:
            index = models.get()['name'].index(call.data)
            await call.bot.send_photo(call.from_user.id, models.get()['photo'][index], 
                                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {models.get()['name'][index]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {models.get()['description'][index]}\n–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {models.get()['price'][index]}—Ä—É–±", reply_markup=types.ReplyKeyboardRemove())
            await call.message.answer(text='–ß—Ç–æ –¥—É–º–∞–µ—Ç–µ?', reply_markup=kb.product_inlain_menu)
            await call.answer()
        
        elif call.data == 'back_to_menu':
            if str(call.from_user.id) == secret_keys('ADMIN_ID'):
                await call.message.answer(fmt.text('–í—ã –≤–æ—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', fmt.hbold('Administrator mode on'), sep='\n'), parse_mode='HTML', reply_markup=kb.main_menu_admin_keyboard)
                await call.answer()
            else:
                await call.message.answer('–í—ã –≤–æ—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=kb.main_menu_keyboard)
                await call.answer()